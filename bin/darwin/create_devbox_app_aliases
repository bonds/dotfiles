#!/usr/bin/env fish

set install_dir "$HOME/Applications/installed via DevBox"

# remove the old aliases so we don't get duplicates
# and use 'find' instead of 'rm' to avoid getting an error when the
# directory is empty, and to make it a little safer in case I mess up
# the $install_dir variable

mkdir -p "$install_dir"
#find "$install_dir" -maxdepth 1 -type f -exec rm '{}' \;

# creating new aliases too quickly after deleting the old ones results
# in MacOS appending a number i.e. 'My App 2' instead of 'My App'

sleep 1

# find all the installed Nix packages that have GUI apps and create
# proper 'Finder aliases' for them so Spotlight will index them
# because it won't index UNIX symbolic links to the Nix volume

set apps ""
set binpaths (echo $PATH | tr " " "\n" | grep -E "^/nix/.*/bin")

for binpath in $binpaths
    set appdir (dirname $binpath)/Applications
    if test -d $appdir
        set app (ls $appdir)
        # some apps like 'mpv' come with multiple variants installed, but we just
        # want one alias for them, so we pick the first instance to link to
        if not contains $app $apps
            set apps $apps $app
        end
        # make aliases if the don't already exist
        # we don't delete and remake them every time even though that's slightly
        # easier to script, because that resets the Spotlight priority, which is
        # a worse UX
        if not test -e "$install_dir/$(basename $app .app)"
            echo creating alias for $app
            osascript -e "tell application \"Finder\" to make new alias at (POSIX file \"$install_dir\") to (POSIX file \"$appdir/$app\")" > /dev/null
        end
    end
end


# delete all the old aliases that reference apps we don't have in our devbox
# anymore
for alias in (ls "$install_dir")
    if not contains $alias.app $apps
        echo removing "$install_dir/$alias"
        rm "$install_dir/$alias"
    end
end