#!/usr/bin/env fish

# find all the installed Nix packages that have GUI apps and create
# a 'MacOS Alias file' aka a 'Finder alias' for each so Spotlight will index them
# because it won't index UNIX symbolic links to the Nix volume

# don't delete and remake the aliases every time even though that'd be
# slightly easier to script, because that resets the Spotlight sort order,
# which is a worse UX

# see also: https://stackoverflow.com/questions/7072208/how-do-i-create-a-macintosh-finder-alias-from-the-command-line
function makealias --argument-names aliasdir apppath appname
    set app (basename $apppath .app)
    osascript -e " \
        tell application \"Finder\" \
        to make new alias \
        at (POSIX file \"$aliasesdir\") \
        to (POSIX file \"$apppath\")" \
        -e "set name of result to \"$app\""
end

# see also: https://apple.stackexchange.com/questions/180762/how-to-go-to-alias-from-terminal
function readalias --argument-names aliaspath
    osascript \
        -e "set toPath to \"\"" \
        -e "tell application \"Finder\"" \
        -e "set toPath to (POSIX file \"$aliaspath\") as alias" \
        -e "set theKind to kind of toPath" \
        -e "if theKind is \"Alias\" then" \
        -e "set toPath to ((original item of toPath) as alias)" \
        -e "end if" \
        -e "end tell" \
        -e "return posix path of (toPath)"
end

set linksdir "$(devbox global path)/.devbox/nix/profile/default/Applications"
set aliasesdir "$HOME/Applications/installed via DevBox"

set apps ""
mkdir -p "$aliasesdir"
for link in (find $linksdir -maxdepth 1 -name '*.app')
    set apppath (realpath "$link")
    set appname (basename $apppath)
    set apps $apps (string lower $appname)
    # echo apps: $apps
    set aliaspath "$aliasesdir/$(basename $appname .app)"
    # echo $aliaspath
    if not test -e "$aliaspath"
        echo creating alias for $appname
        makealias "$aliasdir" "$apppath"
    else if test $apppath != (realpath $(readalias $aliaspath))
        echo updating alias for $appname
        rm "$aliaspath"
        sleep 1 # wait or we'll get an alias called '$appname alias'
        makealias "$aliasdir" "$apppath"
    end
end

# delete all the old aliases that reference apps we don't have in our devbox
# anymore

for alias in (/bin/ls "$aliasesdir")
    # echo $alias
    if not contains (string lower $alias.app) $apps
        echo removing "$aliasesdir/$alias"
        rm "$aliasesdir/$alias"
    end
end
