# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "ahci" "nvme" "usb_storage" "usbhid" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/4dab0a73-780f-492d-8df5-dcc5e743bdd7";
      fsType = "ext4";
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/29FE-54B9";
      fsType = "vfat";
      options = [ "fmask=0022" "dmask=0022" ];
    };

  # remove all existing swap devices
  # swapDevices = lib.mkForce [ ];

  # # add a swap file
  # # https://discourse.nixos.org/t/how-to-add-a-swap-after-nixos-installation/41742
  # # https://chrisdown.name/2018/01/02/in-defence-of-swap.html
  # swapDevices = [{
  #   device = "/swapfile";
  #   size = 64 * 1024; # 64GB
  # }];

  # use all of my 120GB PNY SSD for swap
  swapDevices = [ {
    # use partuuid because disk uuid changes each boot with swap drives
    device = "/dev/disk/by-partuuid/262987aa-01";
    randomEncryption.enable = true; 
  } ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp9s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp8s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
